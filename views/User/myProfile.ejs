<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Profile</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet">
    <style>
        :root {
            --bs-blue: #0d6efd;
            --bs-indigo: #6610f2;
            --bs-purple: #6f42c1;
            --bs-pink: #d63384;
            --bs-red: #dc3545;
            --bs-orange: #fd7e14;
            --bs-yellow: #ffc107;
            --bs-green: #198754;
            --bs-teal: #20c997;
            --bs-cyan: #0dcaf0;
            --bs-white: #fff;
            --bs-gray: #6c757d;
            --bs-gray-dark: #343a40;
            --bs-primary: #81C408;
            --bs-secondary: #FFB524;
            --bs-success: #198754;
            --bs-info: #0dcaf0;
            --bs-warning: #ffc107;
            --bs-danger: #dc3545;
            --bs-light: #F4F6F8;
            --bs-dark: #45595B;
            --bs-font-sans-serif: system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", "Liberation Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
            --bs-font-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
            --bs-gradient: linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));
        }
        body {
            font-family: var(--bs-font-sans-serif);
            background-color: var(--bs-light);
        }
        .profile-container {
            padding: 2rem;
        }
        .aside-menu {
            background-color: var(--bs-dark);
            color: var(--bs-white);
            padding: 1rem;
            height: 100vh;
        }
        .aside-menu a {
            color: var(--bs-white);
            display: block;
            padding: 0.5rem 1rem;
            text-decoration: none;
        }
        .aside-menu a:hover, .aside-menu a.active {
            background-color: var(--bs-primary);
        }
        .card-header {
            background-color: var(--bs-primary);
            color: var(--bs-white);
        }
        .btn-primary {
            background-color: var(--bs-primary);
            border-color: var(--bs-primary);
        }
        .btn-secondary {
            background-color: var(--bs-secondary);
            border-color: var(--bs-secondary);
        }
        .logout-btn {
            position: absolute;
            bottom: 1rem;
            width: calc(100% - 2rem);
        }
        .section {
            display: none;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="row">
            <aside class="col-md-2 aside-menu">
                <h4>User Menu</h4>
                <a href="#userDetails" class="active">User Details</a>
                <a href="#addresses">Addresses</a>
                <a href="#orders">Orders</a>
                <a href="#wallet">Wallet</a>
                <a href="#changePassword">Change Password</a>
                <form action="/logout" method="GET" style="display: inline;">
                    <button type="submit" class="btn btn-danger logout-btn">Logout</button>
                </form>            </aside>
            <div class="col-md-10 profile-container">
                
              <% if (locals.userData) { %>

                <div id="userDetails" class="card mb-4 section">
                    
                    <div class="card-header">User Details</div>
                    <div class="card-body d-flex justify-content-between align-items-center">
                        <div>
                            <p><strong>Name:</strong> <%=userData.firstName %> <%=userData.lastName %></p>
                            <p><strong>Email:</strong> <%=userData.email %></p>
                            <p><strong>Phone:</strong> <%=userData.mobile%></p>
                            <button class="btn btn-secondary" style="width: 140px;" data-toggle="modal" data-target="#editProfileModal">Edit Profile</button>
                        </div>
                        <div>
                            <button class="btn btn-outline-secondary" style="width: 140px;" data-toggle="modal" data-target="#changePasswordModal">Change Password</button>
                        </div>
                    </div>
                    
                    
             <% } %>   
                </div>
                

                <!-- <div id="addresses" class="card mb-4 section">
                    <div class="card-header">Addresses</div>
                    <div class="card-body">
                        <ul id="addressList" class="list-group mb-3">
                            <!-Dynamic Address List Here -->
                        <!-- </ul>
                        <button class="btn btn-primary" data-toggle="modal" data-target="#addAddressModal">Add Address</button>
                    </div>
                </div> --> 
                <div id="addresses" class="card mb-4 section">
                    <div class="card-header">Addresses</div>
                    <div class="card-body">
                        <div id="addressDetails">
                            <div class="row mb-3">
                                <div class="col">
                                    <p><strong>Address Line 1:</strong> 123 Main St</p>
                                    <p><strong>Address Line 2:</strong> Apt 4</p>
                                    <p><strong>City:</strong> New York</p>
                                    <p><strong>State:</strong> NY</p>
                                    <p><strong>Postal Code:</strong> 10001</p>
                                </div>
                                <div class="col-auto">
                                    <button class="btn btn-sm btn-secondary" onclick="editAddress(1)">Edit</button>
                                    <button class="btn btn-sm btn-danger ml-2" onclick="deleteAddress(1)">Delete</button>
                                </div>
                            </div>
                            <hr>
                
                            <div class="row mb-3">
                                <div class="col">
                                    <p><strong>Address Line 1:</strong> 456 Elm St</p>
                                    <p><strong>Address Line 2:</strong> </p>
                                    <p><strong>City:</strong> Boston</p>
                                    <p><strong>State:</strong> MA</p>
                                    <p><strong>Postal Code:</strong> 02118</p>
                                </div>
                                <div class="col-auto">
                                    <button class="btn btn-sm btn-secondary" onclick="editAddress(2)">Edit</button>
                                    <button class="btn btn-sm btn-danger ml-2" onclick="deleteAddress(2)">Delete</button>
                                </div>
                            </div>
                            <hr>
                        </div>
                        <button class="btn btn-primary" data-toggle="modal" data-target="#addAddressModal">Add Address</button>
                    </div>
                </div>

                <div id="orders" class="card mb-4 section">
                    <div class="card-header">Orders</div>
                    <div class="card-body">
                        <ul id="orderList" class="list-group">
                            <!-- Dynamic Order List Here -->
                        </ul>
                    </div>
                </div>

                <div id="wallet" class="card mb-4 section">
                    <div class="card-header">Wallet</div>
                    <div class="card-body">
                        <p>Wallet balance: $100.00</p>
                    </div>
                </div>

                <div id="changePassword" class="card mb-4 section">
                    <div class="card-header">Change Password</div>
                    <div class="card-body">
                        <!-- <button class="btn btn-secondary btn-block" data-toggle="modal" data-target="#changePasswordModal">Change Password</button> -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modals -->
    <!-- Edit Profile Modal -->
    <div class="modal fade" id="editProfileModal" tabindex="-1" role="dialog" aria-labelledby="editProfileModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProfileModalLabel">Edit Profile</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editProfileForm">
                        <div class="form-group">
                            <label for="editName">Name</label>
                            <input type="text" class="form-control" id="editName"  value="<%=userData.firstName %> <%=userData.lastName %>" >
                        </div>
                        <div class="form-group">
                            <label for="editPhone">Phone</label>
                            <input type="text" class="form-control" id="editPhone"  value="<%=userData.mobile %>" >
                        </div>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <script>

        document.getElementById('editProfileForm').addEventListener('submit', async function(event) {
            event.preventDefault();
            
            const name = document.getElementById('editName').value.trim().split(' ');
            const firstName = name[0];
            const lastName = name.slice(1).join(' ');
            const mobile = document.getElementById('editPhone').value.trim();
            
            if (!firstName || !lastName || !mobile) {
                alert('All fields are required');
                return;
            }

            if (!/^\d{10}$/.test(mobile)) {
            alert('Phone number must be exactly 10 digits');
            return;
        }   
    
            const data = { firstName, lastName, mobile };
            
            try {
                const response = await fetch('/editprofile', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
            
                const result = await response.json();
            
                if (result.success) {
                    alert('Profile updated successfully');
                    location.reload(); // Optionally refresh the page or update the UI with the new profile information
                } else {
                    alert('Error updating profile: ' + result.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('An error occurred while updating the profile');
            }
        });

    </script>
       

    <!-- Change Password Modal -->
    <div class="modal fade" id="changePasswordModal" tabindex="-1" role="dialog" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="changePasswordModalLabel">Change Password</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    
                    <form id="changePasswordForm">
                        <div class="form-group">
                            <label for="currentPassword">Current Password</label>
                            <input type="password" class="form-control" id="currentPassword">
                        </div>
                        <div class="form-group">
                            <label for="newPassword">New Password</label>
                            <input type="password" class="form-control" id="newPassword">
                        </div>
                        <div class="form-group">
                            <label for="confirmPassword">Confirm Password</label>
                            <input type="password" class="form-control" id="confirmPassword">
                        </div>
                        <button type="submit" class="btn btn-primary">Change Password</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>

        document.getElementById('changePasswordForm').addEventListener('submit', async function(event) {
            event.preventDefault();
    
            const currentPassword = document.getElementById('currentPassword').value.trim();
            const newPassword = document.getElementById('newPassword').value.trim();
            const confirmPassword = document.getElementById('confirmPassword').value.trim();
    
            if (newPassword !== confirmPassword) {
                toastr.error('New password and confirm password do not match');
                return;
            }
    
            const data = { currentPassword, newPassword };
    
            try {
                const response = await fetch('/changepassword', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(data)
                });
    
                const result = await response.json();
    
                if (result.success) {
                    toastr.success('Password changed successfully');
                    location.reload(); // Optionally refresh the page or update the UI
                } else {
                    toastr.error('Error changing password: ' + result.message);
                }
            } catch (error) {
                console.error('Error:', error);
                toastr.error('An error occurred while changing the password');
            }
        });

    </script>    

    <!-- Add Address Modal -->
    <div class="modal fade" id="addAddressModal" tabindex="-1" role="dialog" aria-labelledby="addAddressModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addAddressModalLabel">Add Address</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="addAddressForm">
                        <div class="form-group">
                            <label for="addressLine1">Address Line 1</label>
                            <input type="text" class="form-control" id="addressLine1">
                        </div>
                        <div class="form-group">
                            <label for="addressLine2">Address Line 2</label>
                            <input type="text" class="form-control" id="addressLine2">
                        </div>
                        <div class="form-group">
                            <label for="city">City</label>
                            <input type="text" class="form-control" id="city">
                        </div>
                        <div class="form-group">
                            <label for="state">State</label>
                            <input type="text" class="form-control" id="state">
                        </div>
                        <div class="form-group">
                            <label for="postalCode">Postal Code</label>
                            <input type="text" class="form-control" id="postalCode">
                        </div>
                        <button type="submit" class="btn btn-primary">Add Address</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
;;
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Show the first section by default
        showSection('userDetails');

        // Set up click handlers for menu items
        document.querySelectorAll('.aside-menu a').forEach(function(menuItem) {
            menuItem.addEventListener('click', function(event) {
                event.preventDefault();
                showSection(event.target.getAttribute('href').substring(1));
                setActiveMenuItem(event.target);
            });
        });

        // User detail modal
        var editProfileModal = document.getElementById('editProfileModal');
        if (editProfileModal) {
            editProfileModal.addEventListener('show.bs.modal', function(event) {
                var button = event.relatedTarget; // Button that triggered the modal
                var name = button.getAttribute('data-name'); // Extract info from data-* attributes
                var email = button.getAttribute('data-email');
                var phone = button.getAttribute('data-phone');

                // Update the modal's input fields
                var modal = editProfileModal;
                modal.querySelector('#editName').value = name;
                modal.querySelector('#editEmail').value = email;
                modal.querySelector('#editPhone').value = phone;
            });
        }

         // Add Address Form Submission
         var addAddressForm = document.getElementById('addAddressForm');
            if (addAddressForm) {
                addAddressForm.addEventListener('submit', async function(event) {
                    event.preventDefault();

                    const addressLine1 = document.getElementById('addressLine1').value.trim();
                    const addressLine2 = document.getElementById('addressLine2').value.trim();
                    const city = document.getElementById('city').value.trim();
                    const state = document.getElementById('state').value.trim();
                    const postalCode = document.getElementById('postalCode').value.trim();

                    if (!addressLine1 || !city || !state || !postalCode) {
                        toastr.error('All fields except Address Line 2 are required');
                        return;
                    }

                    const data = { addressLine1, addressLine2, city, state, postalCode };

                    try {
                        const response = await fetch('/addaddresses', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(data)
                        });

                        if (!response.ok) {
                            throw new Error(`Server error: ${response.status} ${response.statusText}`);
                        }

                        const result = await response.json();

                        if (result.success) {
                            toastr.success('Address added successfully');
                            $('#addAddressModal').modal('hide');
                        } else {
                            toastr.error('Error adding address: ' + result.message);
                        }
                    } catch (error) {
                        console.error('Error:', error);
                        toastr.error('An error occurred while adding the address');
                    }
                });
            }
        });


    function showSection(sectionId) {
        document.querySelectorAll('.section').forEach(function(section) {
            section.style.display = 'none';
        });
        document.getElementById(sectionId).style.display = 'block';
    }

    function setActiveMenuItem(activeItem) {
        document.querySelectorAll('.aside-menu a').forEach(function(menuItem) {
            menuItem.classList.remove('active');
        });
        activeItem.classList.add('active');
    }
</script>
</body>
</html>


<%- include('../Layouts/adminHeader.ejs') %>

<link href="//dist/rcrop.min.css" rel="stylesheet">
  <script src="//code.jquery.com/jquery.min.js"></script>
  <script src="//dist/rcrop.min.js"></script>

  <!-- <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script> -->

<style>
  #cropperImage {
    max-width: 100%;
    max-height: 100%;
  }
  .image-preview {
    position: relative;
    display: inline-block;
    margin: 5px;
  }
  .cropped-image {
    width: 100px; /* Smaller preview image size */
    height: auto;
    display: block;
  }
</style>

<div class="container-fluid py-4">
  <div class="row">
    <div class="col-12">
      <div class="card my-4">
        <div class="card-header p-0 position-relative mt-n4 mx-3 z-index-2">
          <div class="bg-gradient-primary shadow-primary border-radius-lg pt-4 pb-3">
            <h6 class="text-white text-capitalize ps-3">Add New Product</h6>
          </div>
        </div>
        <section class="content-main">
          <div class="row">
            <div class="col-9">
              <div class="content-header">
                <form action="/admin/products" method="post" enctype="multipart/form-data" id="uploadForm" onsubmit="return validateForm()">
              </div>
            </div>
            <div class="col-lg-6">
              <div class="card mb-4">
                <div class="card-header">
                  <h4>Basic</h4>
                </div>
                <div class="card-body">
                  <div class="mb-4">
                    <label for="product_name" class="form-label">Product title</label>
                    <input type="text" placeholder="Product Name" class="form-control" id="product_name" name="pname" pattern="^[a-zA-Z0-9\s.,'-]*$" required>
                  </div>
                  <div class="mb-4">
                    <label class="form-label">Full description</label>
                    <textarea placeholder="Product Description" class="form-control" rows="4" name="pdescription" required></textarea>
                  </div>
                  <div class="row">
                    <div class="col-lg-6">
                      <div class="mb-4">
                        <label class="form-label">MRP</label>
                        <input placeholder="â‚¹" type="number" class="form-control" name="regularPrice" min="0" required>
                      </div>
                    </div>
                    <div class="col-lg-6">
                      <div class="mb-4">
                        <label class="form-label">Quantity</label>
                        <input type="number" placeholder="Quantity" class="form-control" name="quantity" min="0" required>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div class="col-lg-3">
              <div class="card mb-4">
                <div class="card-header">
                  <h4>Images</h4>
                </div>
                <div class="card-body">
                  <div class="input-upload">
                    <input class="form-control" id="fileInput" type="file" name="croppedImage" accept="image/*" multiple>
                    <span id="fileError" style="color: red; display: none;">Please select only image files.</span>
                  </div>
                  <div class="preview-container mt-3" id="previewContainer"></div>
                </div>
              </div>
              <div class="card mb-4">
                <div class="card-header">
                  <h4>Category & Brand</h4>
                </div>
                <div class="card-body">
                  <div class="row">
                    <div class="col-sm-6 mb-3">
                      <label class="form-label">Category</label>
                      <select class="form-select" name="pcategory">
                        <option value="">Select one</option>
                        <% if (locals.newcategory) { %>
                        <% for (let i = 0; i < newcategory.length; i++) { %>
                        <option value="<%= newcategory[i]._id %>"> <%= newcategory[i].name %> </option>
                        <% } %>
                        <% } %>
                      </select>
                    </div>
                    <div style="text-align: right;">
                      <button class="btn btn-md rounded font-sm hover-up" type="submit" style="background-color: green; color: white; border: none; padding: 10px 20px; cursor: pointer; margin-bottom: 30px;">Publish</button>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>
    </div>
  </div>
</div>

<!-- File input and preview container -->
<input type="file" id="fileInput" />
<div id="previewContainer"></div>
<!-- Modal for cropping image -->
<div class="modal fade" id="cropModal" tabindex="-1" role="dialog" aria-labelledby="cropModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="cropModalLabel">Crop Image</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <div class="img-container">
          <img id="imageToCrop" src="" alt="Cropper Image">
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="cropButton">Crop</button>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const fileInput = document.getElementById('fileInput');
    const previewContainer = document.getElementById('previewContainer');
    const cropModalElement = document.getElementById('cropModal');
    const cropImage = document.getElementById('imageToCrop');
    const cropButton = document.getElementById('cropButton');
    let cropper;

    const cropModal = new bootstrap.Modal(cropModalElement);

    fileInput.addEventListener('change', function (event) {
      const files = event.target.files;
      if (files.length > 0) {
        const file = files[0];
        if (file.type.startsWith('image/')) {
          const reader = new FileReader();
          reader.onload = function (e) {
            cropImage.src = e.target.result;
            cropModal.show();
            if (cropper) {
              $.rcrop('destroy');
            }
            $(cropImage).rcrop({
              full: false,
              minSize: [100, 100],
              maxSize: [null, null],
              preserveAspectRatio: true,
              grid: true,
              preview: {
                display: true,
                size: [100, 100],
                wrapper: '.img-container'
              }
            });
          };
          reader.readAsDataURL(file);
        }
      }
    });

    cropButton.addEventListener('click', function () {
      const cropData = $(cropImage).rcrop('getValues');
      if (cropData) {
        const canvas = document.createElement('canvas');
        canvas.width = cropData.width;
        canvas.height = cropData.height;
        const context = canvas.getContext('2d');
        const img = new Image();
        img.src = cropImage.src;
        img.onload = function () {
          context.drawImage(img, cropData.x, cropData.y, cropData.width, cropData.height, 0, 0, cropData.width, cropData.height);
          const croppedImage = canvas.toDataURL('image/png');
          const previewDiv = document.createElement('div');
          previewDiv.className = 'image-preview';
          const imgElement = document.createElement('img');
          imgElement.src = croppedImage;
          imgElement.className = 'cropped-image';
          previewDiv.appendChild(imgElement);
          const deleteButton = document.createElement('button');
          deleteButton.className = 'btn btn-danger btn-sm';
          deleteButton.textContent = 'Delete';
          deleteButton.addEventListener('click', function () {
            previewDiv.remove();
          });
          previewDiv.appendChild(deleteButton);
          previewContainer.appendChild(previewDiv);
          cropModal.hide();
        };
      }
    });

    document.getElementById('uploadForm').addEventListener('submit', function (event) {
      event.preventDefault();
      // Handle form submission, including uploading the cropped image
    });
  });
</script>

<%- include('../Layouts/adminFooter.ejs') %>